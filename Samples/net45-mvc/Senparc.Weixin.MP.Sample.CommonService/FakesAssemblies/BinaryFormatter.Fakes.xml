<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BinaryFormatter.Fakes</name>
    </assembly>
    <members>
        <member name="T:BinaryFormatter.Fakes.ShimBinaryConverter">
            <summary>BinaryFormatter.BinaryConverter 的填充码类型</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.ShimBinaryConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.ShimBinaryConverter.#ctor(BinaryFormatter.BinaryConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:BinaryFormatter.Fakes.ShimBinaryConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.ShimBinaryConverter.AllInstances.DeserializeOf1ByteArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{BinaryFormatter.BinaryConverter,System.Byte[],``0})">
            <summary>设置 BinaryConverter.Deserialize(Byte[] stream) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.ShimBinaryConverter.AllInstances.SerializeObject">
            <summary>设置 BinaryConverter.Serialize(Object obj) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.ShimBinaryConverter.AllInstances.SerializeObjectStream">
            <summary>设置 BinaryConverter.Serialize(Object obj, Stream stream) 的 填充码</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.ShimBinaryConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.ShimBinaryConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.ShimBinaryConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.ShimBinaryConverter.Constructor">
            <summary>设置 BinaryConverter.BinaryConverter() 的 填充码</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.ShimBinaryConverter.DeserializeOf1ByteArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Byte[],``0})">
            <summary>设置 BinaryConverter.Deserialize(Byte[] stream) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.ShimBinaryConverter.SerializeObject">
            <summary>设置 BinaryConverter.Serialize(Object obj) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.ShimBinaryConverter.SerializeObjectStream">
            <summary>设置 BinaryConverter.Serialize(Object obj, Stream stream) 的 填充码</summary>
        </member>
        <member name="T:BinaryFormatter.Fakes.StubBinaryConverter">
            <summary>BinaryFormatter.BinaryConverter 的存根类型</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.StubBinaryConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.StubBinaryConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:BinaryFormatter.Fakes.StubBinaryConverter.InitializeStub">
            <summary>初始化 type StubBinaryConverter 的新实例</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.StubBinaryConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BinaryFormatter.Fakes.StubBinaryConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BinaryFormatter.Utils.Fakes.ShimSerializedTypeExtensions">
            <summary>BinaryFormatter.Utils.SerializedTypeExtensions 的填充码类型</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimSerializedTypeExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimSerializedTypeExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimSerializedTypeExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimSerializedTypeExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:BinaryFormatter.Utils.Fakes.ShimStreamExtensions">
            <summary>BinaryFormatter.Utils.StreamExtensions 的填充码类型</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimStreamExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimStreamExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimStreamExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimStreamExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimStreamExtensions.WriteStreamByteArray">
            <summary>设置 StreamExtensions.Write(Stream stream, Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimStreamExtensions.WriteWithLengthPrefixStreamByteArray">
            <summary>设置 StreamExtensions.WriteWithLengthPrefix(Stream stream, Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="T:BinaryFormatter.Utils.Fakes.ShimTypeHelper">
            <summary>BinaryFormatter.Utils.TypeHelper 的填充码类型</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimTypeHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimTypeHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimTypeHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeHelper.CastFromObject">
            <summary>设置 TypeHelper.CastFrom(Object obj) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeHelper.HasConversionOperatorTypeType">
            <summary>设置 TypeHelper.HasConversionOperator(Type from, Type to) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeHelper.IsDictionaryObject">
            <summary>设置 TypeHelper.IsDictionary(Object obj) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeHelper.IsLinkedListObject">
            <summary>设置 TypeHelper.IsLinkedList(Object obj) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeHelper.IsListObject">
            <summary>设置 TypeHelper.IsList(Object obj) 的 填充码</summary>
        </member>
        <member name="T:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions">
            <summary>BinaryFormatter.Utils.TypeInfoExtensions 的填充码类型</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllConstructorsTypeInfo">
            <summary>设置 TypeInfoExtensions.GetAllConstructors(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllEventsTypeInfo">
            <summary>设置 TypeInfoExtensions.GetAllEvents(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllFieldsTypeInfo">
            <summary>设置 TypeInfoExtensions.GetAllFields(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllMembersTypeInfo">
            <summary>设置 TypeInfoExtensions.GetAllMembers(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllMethodsTypeInfo">
            <summary>设置 TypeInfoExtensions.GetAllMethods(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllNestedTypesTypeInfo">
            <summary>设置 TypeInfoExtensions.GetAllNestedTypes(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="M:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllOf1TypeInfoFuncOfTypeInfoIEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.TypeInfo,System.Func{System.Reflection.TypeInfo,System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>设置 TypeInfoExtensions.GetAll(TypeInfo typeInfo, Func`2&lt;TypeInfo,IEnumerable`1&lt;!!0&gt;&gt; accessor) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.GetAllPropertiesTypeInfo">
            <summary>设置 TypeInfoExtensions.GetAllProperties(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.IsBaseTypeTypeInfo">
            <summary>设置 TypeInfoExtensions.IsBaseType(TypeInfo typeInfo) 的 填充码</summary>
        </member>
        <member name="P:BinaryFormatter.Utils.Fakes.ShimTypeInfoExtensions.StaticConstructor">
            <summary>设置 TypeInfoExtensions.TypeInfoExtensions() 的 填充码</summary>
        </member>
    </members>
</doc>
